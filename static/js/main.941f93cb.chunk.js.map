{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ListItem/ListItem.js","components/ContactsList/ContactsList.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","handleInput","e","stateField","target","setState","value","handleSubmit","preventDefault","contact","id","uuid","props","addContact","clearInput","alert","this","onSubmit","type","onChange","Component","Filter","ListItem","deleteContact","onClick","ContactsList","contacts","map","App","filter","find","contactID","filteredContacts","filterNormalize","toLowerCase","includes","contactsInitial","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.941f93cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handleInput = e => {\n    const stateField = e.target.name;\n    this.setState({ [stateField]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (!name || !number) {\n      alert(`Complete the form please`);\n      return;\n    }\n\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n    this.props.addContact(contact);\n    this.clearInput();\n  };\n\n  clearInput = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleInput, handleSubmit } = this;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name</p>\n          <input type=\"text\" value={name} onChange={handleInput} name=\"name\" />\n        </label>{' '}\n        <label>\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={handleInput}\n            name=\"number\"\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, handleInput }) => {\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={handleInput} name=\"filter\" value={value} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  handleInput: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListItem = ({ contact, deleteContact }) => {\n  const { id, name, number } = contact;\n  return (\n    <li>\n      <span>{name}: </span>\n      <span>{number}</span>\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport ListItem from './ListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ListItem\n          key={contact.id}\n          contact={contact}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactsList from './ContactsList';\n\n// localStorage.setItem('contacts', JSON.stringify(\n//   [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ]\n// ));\n// localStorage.removeItem('contacts')\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsInitial = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsInitial) {\n      this.setState({ contacts: contactsInitial });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  handleInput = e => {\n    const stateField = e.target.name;\n    this.setState({ [stateField]: e.target.value });\n  };\n\n  addContact = contact => {\n    const { name } = contact;\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n    }\n  };\n\n  deleteContact = contactID => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter(contact => contact.id !== contactID),\n    });\n  };\n\n  filteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const filterNormalize = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterNormalize),\n    );\n  };\n\n  render() {\n    const { handleInput, addContact, filteredContacts, deleteContact } = this;\n    const visibleContacts = filteredContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={addContact} />\n        <Filter handleInput={handleInput} />\n        <h2>Contacts</h2>\n        <ContactsList\n          contacts={visibleContacts}\n          deleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}